main()
	Runs the main loop
	Calls a menu
	Sends control to other parts of the program
	Handles invalid input from menu
getMenuChoice()
	prints a menu of user options
	returns a menu choice
playGame()
	plays the game
	Keeps going until next node is "quit"
playNode()
	given the game data and a node,
	plays out the node
	returns the next node
getDefaultGame()
	creates a single-node default game
	returns that data structure
editNode()
	given the current game structure...
	list all the current node content  (json.dumps() would be an easy way to do this)
	get a node name
	if that node exists
		copy that node to newNode
	otherwise...
		create newNode with empty data
	use editField() to allow user to edit each node
	return the now edited newNode
editField()
	get a field name
	print the field's current value
	if the user presses 'enter' immediately
	retain the current value
	otherwise...
	use the new value
saveGame()
	save the game to a data file
	you can preset the file name (eg 'game.dat')
	print the current game dictionary in human-readable format
	Save the file in JSON format
loadGame()
	presume there is a data file named 'game.dat' in the current directory
	open that file
	load the data into the game object
	return that game object

make sure to use game.json as database for game